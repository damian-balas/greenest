{"version":3,"sources":["assets/images/environment.jpg","theme/GlobalStyle.js","theme/mainTheme.js","components/Header/Header.js","components/Hero/Hero.js","components/Form/Form.js","utils/getDateString.js","components/CitiesGrid/CitiesGrid.js","components/Spinner/Spinner.js","components/Footer/Footer.js","App.js","index.js"],"names":["module","exports","GlobalStyle","createGlobalStyle","theme","primary","gray","StyledHeader","styled","header","StyledLogo","h1","memo","StyledHero","section","StyledImage","div","bgImage","StyledText","h2","PrimaryColorText","span","StyledInput","input","StyledForm","form","StyledLabel","label","StyledList","ul","StyledErrorMessage","StyledListItem","li","selected","css","StyledButton","button","StyledWrapper","localStorageCountry","localStorage","getItem","Form","state","activeSuggestion","filteredSuggestions","showSuggestions","userInput","handleChange","event","suggestions","props","currentTarget","value","filter","suggestion","toLowerCase","includes","setState","length","charAt","toUpperCase","slice","handleSuggestionClick","handleSubmit","textContent","handleKeyDown","isArrowUpPressed","keyCode","isArrowDownPressed","isEnterPressed","preventDefault","prevState","this","errorMessage","isCountryInvalid","autoComplete","onSubmit","htmlFor","type","id","onChange","onKeyDown","required","placeholder","map","index","key","onClick","join","PureComponent","defaultProps","getDateString","date","day","getUTCDate","toString","padStart","month","getUTCMonth","year","getUTCFullYear","fadeIn","keyframes","StyledCitiesGrid","StyledCity","StyledCityName","StyledCityDescription","CitiesGrid","cities","pageid","title","extract","spin","defaultCss","StyledLoader","Spinner","StyledFooter","footer","StyledLink","a","Footer","href","target","rel","App","isLoading","getPollutedCities","countryAbbr","citiesLimit","async","POLLUTED_CITIES_URL","Date","axios","get","response","results","data","citiesSet","Set","some","result","has","city","add","size","substring","indexOf","getCitiesDescription","CITIES_DESCRIPTION_URL","country","COUNTRY_MAP","CITIES_LIMIT","setItem","citiesWikipediaQuery","encodeURI","citiesDescription","citiesArray","Object","values","query","pages","message","Map","ReactDOM","render","document","getElementById"],"mappings":"8GAAAA,EAAOC,QAAU,IAA0B,yC,o7BCE3C,IAsCeC,EAtCKC,YAAH,KCGFC,EALD,CACZC,QAAS,UACTC,KAAM,W,8QCCR,IAAMC,EAAeC,IAAOC,OAAV,KAQZC,EAAaF,IAAOG,GAAV,KAEL,qBAAGP,MAAkBC,WASjBO,kBANA,kBACb,kBAACL,EAAD,KACE,kBAACG,EAAD,sB,wqBCdJ,IAAMG,EAAaL,IAAOM,QAAV,KAIVC,EAAcP,IAAOQ,IAAV,IACGC,KASdC,EAAaV,IAAOW,GAAV,KASVC,EAAmBZ,IAAOa,KAAV,KACX,qBAAGjB,MAAkBC,WAajBO,kBATF,kBACX,kBAACC,EAAD,KACE,kBAACK,EAAD,oBACc,6BADd,QACyB,kBAACE,EAAD,eAEzB,kBAACL,EAAD,U,s1DCjCJ,IAAMO,EAAcd,IAAOe,MAAV,KAmBXC,EAAahB,IAAOiB,KAAV,KAWVC,EAAclB,IAAOmB,MAAV,KAIXC,EAAapB,IAAOqB,GAAV,KAKVC,EAAqBtB,IAAOQ,IAAV,KAMlBe,EAAiBvB,IAAOwB,GAAV,KAQhB,gBAAGC,EAAH,EAAGA,SAAU7B,EAAb,EAAaA,MAAb,OACA6B,GACAC,YADQ,IAEG9B,EAAMC,YAKf8B,GAAe3B,IAAO4B,OAAV,KAKI,qBAAGhC,MAAkBC,WAgBrCgC,GAAgB7B,IAAOQ,IAAV,KAObsB,GAAsBC,aAAaC,QAAQ,WAE3CC,G,2MACJC,MAAQ,CACNC,iBAAkB,EAClBC,oBAAqB,GACrBC,iBAAiB,EACjBC,UAAWR,IAAuB,I,EAGpCS,aAAe,SAAAC,GAAU,IACfC,EAAgB,EAAKC,MAArBD,YACFH,EAAYE,EAAMG,cAAcC,MAChCR,EAAsBK,EAAYI,QAAO,SAAAC,GAAU,OACvDA,EAAWC,cAAcC,SAASV,EAAUS,kBAG9C,EAAKE,SAAS,CACZd,iBAAkB,EAClBC,sBACAC,kBAAmBD,EAAoBc,QAAUZ,EACjDA,UAAWA,EAAUa,OAAO,GAAGC,cAAgBd,EAAUe,MAAM,M,EAInEC,sBAAwB,SAAAd,GAAU,IACxBe,EADuB,eACvBA,aACR,EAAKN,SACH,CACEd,iBAAkB,EAClBE,iBAAiB,EACjBD,oBAAqB,GACrBE,UAAWE,EAAMG,cAAca,cAEjC,kBAAMD,Q,EAIVE,cAAgB,SAAAjB,GAAU,IAAD,EAKnB,EAAKN,MAHPC,EAFqB,EAErBA,iBACAC,EAHqB,EAGrBA,oBACAC,EAJqB,EAIrBA,gBAGIqB,EAAqC,KAAlBlB,EAAMmB,QACzBC,EAAuC,KAAlBpB,EAAMmB,QAC3BE,EAAmC,KAAlBrB,EAAMmB,QAM7B,IAJID,GAAoBE,IACtBpB,EAAMsB,iBAGJD,GAAkBxB,EACpB,EAAKY,UAAS,SAAAc,GAAS,MAAK,CAC1B5B,iBAAkB,EAClBE,iBAAiB,EACjBC,UAAWF,EAAoB2B,EAAU5B,2BAEtC,GAAIuB,EAAkB,CAC3B,GAAyB,IAArBvB,EACF,OAGF,EAAKc,UAAS,SAAAc,GAAS,MAAK,CAC1B5B,iBAAkB4B,EAAU5B,iBAAmB,WAE5C,GAAIyB,EAAoB,CAC7B,GAAIzB,EAAmB,IAAMC,EAAoBc,OAC/C,OAGF,EAAKD,UAAS,SAAAc,GAAS,MAAK,CAC1B5B,iBAAkB4B,EAAU5B,iBAAmB,Q,EAKrDoB,aAAe,SAAAf,GAAU,IACfe,EAAiB,EAAKb,MAAtBa,aACAjB,EAAc,EAAKJ,MAAnBI,UACJE,GACFA,EAAMsB,iBAERP,EAAajB,I,wEAGL,IAENC,EAIEyB,KAJFzB,aACAe,EAGEU,KAHFV,sBACAG,EAEEO,KAFFP,cACAF,EACES,KADFT,aALK,EAaHS,KAAK9B,MAJPC,EATK,EASLA,iBACAC,EAVK,EAULA,oBACAC,EAXK,EAWLA,gBACAC,EAZK,EAYLA,UAZK,EAeiD0B,KAAKtB,MAArDD,EAfD,EAeCA,YAAawB,EAfd,EAecA,aAAcC,EAf5B,EAe4BA,iBAEnC,OACE,kBAAClD,EAAD,CAAYmD,aAAa,MAAMC,SAAUb,GACvC,kBAACrC,EAAD,CAAamD,QAAQ,WAArB,yCAGA,kBAACxC,GAAD,KACE,kBAACf,EAAD,CACEwD,KAAK,OACLC,GAAG,UACHC,SAAUjC,EACVkC,UAAWhB,EACXb,MAAON,EACPoC,UAAQ,EACRC,YAAY,iBAGd,kBAAChD,GAAD,CAAc2C,KAAK,UAAnB,WAEDjC,GACC,kBAACjB,EAAD,KACkC,IAA/BgB,EAAoBc,QACnBd,EAAoBwC,KAAI,SAAC9B,EAAY+B,GAAb,OACtB,kBAACtD,EAAD,CACEE,SAAUoD,IAAU1C,EACpB2C,IAAKhC,EACLiC,QAASzB,GAERR,OAKVoB,GACC,kBAAC5C,EAAD,6BACwBmB,EAAYuC,KAAK,OAG1Cf,GACC,kBAAC3C,EAAD,KAAqB2C,Q,GA5IZgB,iBAmJnBhD,GAAKiD,aAAe,CAClBzC,YAAa,CAAC,SAAU,UAAW,QAAS,UAC5CwB,aAAc,IASDhC,UClPAkD,OAXf,SAAuBC,GACrB,IAAMC,EAAMD,EACTE,aACAC,WACAC,SAAS,EAAG,GACTC,GAASL,EAAKM,cAAgB,GAAGH,WAAWC,SAAS,EAAG,GACxDG,EAAOP,EAAKQ,iBAElB,MAAM,GAAN,OAAUD,EAAV,YAAkBF,EAAlB,YAA2BJ,I,khCCJ7B,IAAMQ,GAASC,YAAH,MAWNC,GAAmB/F,IAAOQ,IAAV,MAShBwF,GAAahG,IAAOQ,IAAV,KAGDqF,IAGTI,GAAiBjG,IAAOa,KAAV,MAKE,qBAAGjB,MAAkBC,WAKrCqG,GAAwBlG,IAAOa,KAAV,MAuBZsF,GAfI,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACjB,kBAACL,GAAD,KACGK,EAAOxB,KAAI,gBAAGyB,EAAH,EAAGA,OAAQC,EAAX,EAAWA,MAAOC,EAAlB,EAAkBA,QAAlB,OACV,kBAACP,GAAD,CAAYlB,IAAKuB,GACf,kBAACJ,GAAD,KAAiBK,GACjB,kBAACJ,GAAD,KAAwBK,S,yoCClDhC,IAAMC,GAAOV,YAAH,MASJW,GAAa/E,YAAH,MAMVgF,GAAe1G,IAAOQ,IAAV,KACdiG,IAQwB,qBAAG7G,MAAkBC,UAElC2G,GAGTC,IAOA5E,GAAgB7B,IAAOQ,IAAV,MAuBJmG,GAPC,kBACd,kBAAC,GAAD,KACE,kBAACD,GAAD,MADF,qB,2jBCrDF,IAAME,GAAe5G,IAAO6G,OAAV,MAGI,qBAAGjH,MAAkBC,WAQrCa,GAAaV,IAAOa,KAAV,MAMViG,GAAa9G,IAAO+G,EAAV,MAqCDC,GA5BA,kBACb,kBAACJ,GAAD,KACE,kBAAC,GAAD,+BAC2B,6BAD3B,0CAE+B,6BAF/B,gCAIE,kBAACE,GAAD,CACEG,KAAK,yBACLC,OAAO,SACPC,IAAI,uBAEH,IALH,SAQA,6BAZF,mBAcE,kBAACL,GAAD,CACEI,OAAO,SACPC,IAAI,sBACJF,KAAK,iHAEJ,IALH,cC/BAG,G,2MACJlF,MAAQ,CACNgC,kBAAkB,EAClBmD,WAAW,EACXjB,OAAQ,GACRnC,aAAc,I,EAGhBqD,kBAAoB,SAAOC,EAAaC,GAApB,qBAAAT,EAAAU,OAAA,uDACZC,EADY,yDAC4DH,EAD5D,wEACuIpC,GACvJ,IAAIwC,OAFY,WAAAZ,EAAA,MAKKa,IAAMC,IAAIH,IALf,cAKZI,EALY,OAMVC,EAAYD,EAASE,KAArBD,QACFE,EAAY,IAAIC,IAEtBH,EAAQI,MAAK,SAAAC,GAIX,OAHKH,EAAUI,IAAID,EAAOE,OACxBL,EAAUM,IAAIH,EAAOE,MAEhBL,EAAUO,OAAShB,KAbV,kBAgBX,YAAIS,GAAWrD,KAAI,SAAA0D,GAAI,OAC5BA,EAAKtF,SAAS,KAAOsF,EAAKG,UAAU,EAAGH,EAAKI,QAAQ,MAAQJ,MAjB5C,sC,EAqBpBK,qBAAuB,SAAMvC,GAAN,iBAAAW,EAAAU,OAAA,uDACfmB,EADe,wKAC2KxC,GAD3K,WAAAW,EAAA,MAGEa,IAAMC,IAAIe,IAHZ,cAGfd,EAHe,yBAIdA,GAJc,sC,EAOvBvE,aAAe,SAAMsF,GAAN,6BAAA9B,EAAAU,OAAA,qDACyB,EAAK/E,MAAnCoG,EADK,EACLA,YAAaC,EADR,EACQA,aAChBD,EAAYT,IAAIQ,GAFR,gBAGX,EAAK5F,SAAS,CACZiB,kBAAkB,IAJT,8BAOX,EAAKjB,SAAS,CACZoE,WAAW,EACXnD,kBAAkB,IATT,SAaTnC,aAAaiH,QAAQ,UAAWH,GAC1BtB,EAAcuB,EAAYjB,IAAIgB,GAd3B,YAAA9B,EAAA,MAeY,EAAKO,kBAAkBC,EAAawB,IAfhD,eAeH3C,EAfG,OAiBH6C,EAAuBC,UAAU9C,EAAOpB,KAAK,MAjB1C,YAAA+B,EAAA,MAkBuB,EAAK4B,qBACnCM,IAnBO,QAkBHE,EAlBG,OAqBHC,EAAcC,OAAOC,OAAOH,EAAkBnB,KAAKuB,MAAMC,OAE/D,EAAKvG,SAAS,CACZmD,OAAQgD,EACRnF,aAAc,GACdoD,WAAW,IA1BJ,kDA6BT,EAAKpE,SAAS,CACZgB,aAAc,KAAMwF,QACpBpC,WAAW,IA/BJ,0D,wEAqCL,IACA9D,EAAiBS,KAAjBT,aADD,EAEuDS,KAAK9B,MAA3DgC,EAFD,EAECA,iBAAkBD,EAFnB,EAEmBA,aAAcmC,EAFjC,EAEiCA,OAAQiB,EAFzC,EAEyCA,UAChD,OACE,oCACE,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAezH,MAAOA,GACpB,kBAAC,EAAD,MACA,8BACE,kBAAC,EAAD,MACA,kBAAC,GAAD,CACEqE,aAAcA,EACdC,iBAAkBA,EAClBX,aAAcA,IAEf8D,GAAa,kBAAC,GAAD,MACK,IAAlBjB,EAAOlD,QAAgB,kBAAC,GAAD,CAAYkD,OAAQA,KAE9C,kBAAC,GAAD,Y,GA3FQnB,iBAkGlBmC,GAAIlC,aAAe,CACjB4D,YAAa,IAAIY,IAAI,CACnB,CAAC,SAAU,MACX,CAAC,UAAW,MACZ,CAAC,QAAS,MACV,CAAC,SAAU,QAEbX,aAAc,IAOD3B,UC1HfuC,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.9ec2729a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/environment.7d63c75e.jpg\";","import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n  @import url('https://fonts.googleapis.com/css?family=Montserrat:300,600&display=swap');\n\n  *, *::before, *::after {\n    box-sizing: border-box;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    margin: 0;\n    padding: 0;\n  }\n\n  html {\n    font-size: 62.5%;\n  }\n\n  body {\n    font-size: 1.6rem;\n    font-family: \"Montserrat\";\n    line-height: 1.4;\n    overflow-x: hidden;\n    background-color: #edeadb;\n\n    display: flex;\n    flex-direction: column;\n    min-height: 100vh;\n  }\n\n  button, input {\n    font-family: inherit;\n  }\n\n  #root {\n    display: flex;\n    flex-direction: column;\n    flex: 1\n  }\n`;\n\nexport default GlobalStyle;\n","const theme = {\n  primary: '#007562',\n  gray: '#edeadb',\n};\n\nexport default theme;\n","import React, { memo } from 'react';\nimport styled from 'styled-components';\n\nconst StyledHeader = styled.header`\n  height: 10rem;\n  padding: 3rem;\n  max-width: 130rem;\n  width: 100%;\n  margin: 0 auto;\n`;\n\nconst StyledLogo = styled.h1`\n  font-size: 3rem;\n  color: ${({ theme }) => theme.primary};\n`;\n\nconst Header = () => (\n  <StyledHeader>\n    <StyledLogo>.greenest</StyledLogo>\n  </StyledHeader>\n);\n\nexport default memo(Header);\n","import React, { memo } from 'react';\nimport styled from 'styled-components';\nimport bgImage from '../../assets/images/environment.jpg';\n\nconst StyledHero = styled.section`\n  padding: 5rem 3rem 0;\n`;\n\nconst StyledImage = styled.div`\n  background: url(${bgImage}) center/contain no-repeat;\n  height: 55vh;\n  min-height: 20rem;\n  max-height: 40rem;\n  @media (min-width: 35em) {\n    max-height: 70rem;\n  }\n`;\n\nconst StyledText = styled.h2`\n  font-size: 3rem;\n  font-weight: 300;\n  text-align: center;\n  @media (min-height: 45em) and (min-width: 62.5em) {\n    font-size: 4.5rem;\n  }\n`;\n\nconst PrimaryColorText = styled.span`\n  color: ${({ theme }) => theme.primary};\n  font-weight: 600;\n`;\n\nconst Hero = () => (\n  <StyledHero>\n    <StyledText>\n      Let us save <br /> the <PrimaryColorText>world</PrimaryColorText>\n    </StyledText>\n    <StyledImage />\n  </StyledHero>\n);\n\nexport default memo(Hero);\n","import React, { PureComponent } from 'react';\nimport styled, { css } from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst StyledInput = styled.input`\n  padding: 1rem 2rem;\n  border-radius: 5rem 0 0 5rem;\n  border: none;\n  font-size: 1.6rem;\n  outline: none;\n  width: 100%;\n  box-shadow: 0px 10px 40px -15px rgba(0, 0, 0, 0.3);\n\n  :focus {\n    background: linear-gradient(\n        90deg,\n        rgb(197, 218, 139, 0.15),\n        rgb(197, 218, 139, 0.15)\n      ),\n      linear-gradient(90deg, white, white);\n  }\n`;\n\nconst StyledForm = styled.form`\n  display: flex;\n  max-width: 40rem;\n  margin: 0 auto 6.5rem;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  flex-wrap: wrap;\n  padding: 0 3rem;\n`;\n\nconst StyledLabel = styled.label`\n  text-align: center;\n`;\n\nconst StyledList = styled.ul`\n  text-align: center;\n  list-style: none;\n`;\n\nconst StyledErrorMessage = styled.div`\n  color: rgb(214, 69, 65);\n  padding: 1rem;\n  text-align: center;\n`;\n\nconst StyledListItem = styled.li`\n  cursor: pointer;\n  margin-top: 1rem;\n\n  :hover {\n    text-decoration: underline;\n  }\n\n  ${({ selected, theme }) =>\n    selected &&\n    css`\n      color: ${theme.primary};\n      font-weight: 600;\n    `}\n`;\n\nconst StyledButton = styled.button`\n  font-size: 1.6rem;\n  border: none;\n  padding: 1rem 2rem;\n  border-radius: 0 5rem 5rem 0;\n  background-color: ${({ theme }) => theme.primary};\n  color: white;\n  cursor: pointer;\n  outline: none;\n\n  :disabled {\n    opacity: 0.8;\n    cursor: not-allowed;\n  }\n\n  :hover,\n  :focus {\n    opacity: 0.8;\n  }\n`;\n\nconst StyledWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 0.5rem;\n`;\n\nconst localStorageCountry = localStorage.getItem('country');\n\nclass Form extends PureComponent {\n  state = {\n    activeSuggestion: 0,\n    filteredSuggestions: [],\n    showSuggestions: false,\n    userInput: localStorageCountry || '',\n  };\n\n  handleChange = event => {\n    const { suggestions } = this.props;\n    const userInput = event.currentTarget.value;\n    const filteredSuggestions = suggestions.filter(suggestion =>\n      suggestion.toLowerCase().includes(userInput.toLowerCase()),\n    );\n\n    this.setState({\n      activeSuggestion: 0,\n      filteredSuggestions,\n      showSuggestions: !!filteredSuggestions.length && userInput,\n      userInput: userInput.charAt(0).toUpperCase() + userInput.slice(1),\n    });\n  };\n\n  handleSuggestionClick = event => {\n    const { handleSubmit } = this;\n    this.setState(\n      {\n        activeSuggestion: 0,\n        showSuggestions: false,\n        filteredSuggestions: [],\n        userInput: event.currentTarget.textContent,\n      },\n      () => handleSubmit(),\n    );\n  };\n\n  handleKeyDown = event => {\n    const {\n      activeSuggestion,\n      filteredSuggestions,\n      showSuggestions,\n    } = this.state;\n\n    const isArrowUpPressed = event.keyCode === 38;\n    const isArrowDownPressed = event.keyCode === 40;\n    const isEnterPressed = event.keyCode === 13;\n\n    if (isArrowUpPressed || isArrowDownPressed) {\n      event.preventDefault();\n    }\n\n    if (isEnterPressed && showSuggestions) {\n      this.setState(prevState => ({\n        activeSuggestion: 0,\n        showSuggestions: false,\n        userInput: filteredSuggestions[prevState.activeSuggestion],\n      }));\n    } else if (isArrowUpPressed) {\n      if (activeSuggestion === 0) {\n        return;\n      }\n\n      this.setState(prevState => ({\n        activeSuggestion: prevState.activeSuggestion - 1,\n      }));\n    } else if (isArrowDownPressed) {\n      if (activeSuggestion + 1 === filteredSuggestions.length) {\n        return;\n      }\n\n      this.setState(prevState => ({\n        activeSuggestion: prevState.activeSuggestion + 1,\n      }));\n    }\n  };\n\n  handleSubmit = event => {\n    const { handleSubmit } = this.props;\n    const { userInput } = this.state;\n    if (event) {\n      event.preventDefault();\n    }\n    handleSubmit(userInput);\n  };\n\n  render() {\n    const {\n      handleChange,\n      handleSuggestionClick,\n      handleKeyDown,\n      handleSubmit,\n    } = this;\n\n    const {\n      activeSuggestion,\n      filteredSuggestions,\n      showSuggestions,\n      userInput,\n    } = this.state;\n\n    const { suggestions, errorMessage, isCountryInvalid } = this.props;\n\n    return (\n      <StyledForm autoComplete=\"off\" onSubmit={handleSubmit}>\n        <StyledLabel htmlFor=\"country\">\n          Find most polluted cities for country\n        </StyledLabel>\n        <StyledWrapper>\n          <StyledInput\n            type=\"text\"\n            id=\"country\"\n            onChange={handleChange}\n            onKeyDown={handleKeyDown}\n            value={userInput}\n            required\n            placeholder=\"I.e. Germany\"\n          />\n\n          <StyledButton type=\"submit\">submit</StyledButton>\n        </StyledWrapper>\n        {showSuggestions && (\n          <StyledList>\n            {filteredSuggestions.length !== 0 &&\n              filteredSuggestions.map((suggestion, index) => (\n                <StyledListItem\n                  selected={index === activeSuggestion}\n                  key={suggestion}\n                  onClick={handleSuggestionClick}\n                >\n                  {suggestion}\n                </StyledListItem>\n              ))}\n          </StyledList>\n        )}\n        {isCountryInvalid && (\n          <StyledErrorMessage>\n            Invalid country, try {suggestions.join(', ')}\n          </StyledErrorMessage>\n        )}\n        {errorMessage && (\n          <StyledErrorMessage>{errorMessage}</StyledErrorMessage>\n        )}\n      </StyledForm>\n    );\n  }\n}\n\nForm.defaultProps = {\n  suggestions: ['Poland', 'Germany', 'Spain', 'France'],\n  errorMessage: '',\n};\n\nForm.propTypes = {\n  suggestions: PropTypes.arrayOf(PropTypes.string),\n  handleSubmit: PropTypes.func.isRequired,\n  errorMessage: PropTypes.string,\n  isCountryInvalid: PropTypes.bool.isRequired,\n};\nexport default Form;\n","function getDateString(date) {\n  const day = date\n    .getUTCDate()\n    .toString()\n    .padStart(2, 0);\n  const month = (date.getUTCMonth() + 1).toString().padStart(2, 0);\n  const year = date.getUTCFullYear();\n\n  return `${year}-${month}-${day}`;\n}\n\nexport default getDateString;\n","import React from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst fadeIn = keyframes`\n  from {\n    opacity: 0;\n    transform: translateY(-3rem);\n  };\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  };\n`;\n\nconst StyledCitiesGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(25rem, 1fr));\n  grid-gap: 3rem;\n  margin: 6.5rem auto;\n  max-width: 130rem;\n  padding: 0 3rem;\n`;\n\nconst StyledCity = styled.div`\n  display: inline-flex;\n  flex-direction: column;\n  animation: ${fadeIn} 0.3s ease-out;\n`;\n\nconst StyledCityName = styled.span`\n  font-weight: 600;\n  font-size: 2rem;\n  text-align: center;\n  border-radius: 2rem 2rem 0 0;\n  background-color: ${({ theme }) => theme.primary};\n  color: white;\n  padding: 1rem;\n`;\n\nconst StyledCityDescription = styled.span`\n  background: #fff;\n  box-shadow: 0 10px 30px -10px rgba(0, 0, 0, 0.3);\n  border-radius: 0 0 2rem 2rem;\n  padding: 3rem;\n  flex: 1;\n`;\n\nconst CitiesGrid = ({ cities }) => (\n  <StyledCitiesGrid>\n    {cities.map(({ pageid, title, extract }) => (\n      <StyledCity key={pageid}>\n        <StyledCityName>{title}</StyledCityName>\n        <StyledCityDescription>{extract}</StyledCityDescription>\n      </StyledCity>\n    ))}\n  </StyledCitiesGrid>\n);\n\nCitiesGrid.propTypes = {\n  cities: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default CitiesGrid;\n","import React from 'react';\nimport styled, { css, keyframes } from 'styled-components';\n\nconst spin = keyframes`\n  0% {\n    transform: rotate(0deg);\n  };\n  100% {\n    transform: rotate(360deg);\n  };\n`;\n\nconst defaultCss = css`\n  border-radius: 50%;\n  width: 12.5rem;\n  height: 12.5rem;\n`;\n\nconst StyledLoader = styled.div`\n  ${defaultCss};\n  margin: 3rem auto;\n  font-size: 1rem;\n  position: relative;\n  text-indent: -9999em;\n  border: 2rem solid rgba(0, 117, 98, 0.2);\n  /* border-right: 1rem solid rgba(0, 117, 98, 0.2);\n  border-bottom: 1rem solid rgba(0, 117, 98, 0.2); */\n  border-left: 2rem solid ${({ theme }) => theme.primary};\n  transform: translateZ(0);\n  animation: ${spin} 1s infinite linear;\n\n  ::after {\n    ${defaultCss};\n    position: absolute;\n    top: 0;\n    content: '';\n  }\n`;\n\nconst StyledWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  justify-content: center;\n  position: fixed;\n  top: 0;\n  left: 0;\n  background-color: rgba(0, 0, 0, 0.9);\n  color: white;\n  height: 100vh;\n  width: 100vw;\n  text-align: center;\n  font-size: 2.5rem;\n`;\n\nconst Spinner = () => (\n  <StyledWrapper>\n    <StyledLoader />\n    Fetching Data...\n  </StyledWrapper>\n);\n\nexport default Spinner;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledFooter = styled.footer`\n  min-height: 10rem;\n  margin-top: auto;\n  background-color: ${({ theme }) => theme.primary};\n  padding: 3rem;\n  text-align: center;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst StyledText = styled.span`\n  color: white;\n  max-width: 130rem;\n  margin: 0 auto;\n`;\n\nconst StyledLink = styled.a`\n  color: white;\n  text-decoration: none;\n  font-weight: 600;\n  :hover {\n    text-decoration: underline;\n  }\n`;\n\nconst Footer = () => (\n  <StyledFooter>\n    <StyledText>\n      &copy; 2019 Damian Balas <br />\n      Thanks for using this app ❤️ <br />\n      Save the world and plant some\n      <StyledLink\n        href=\"https://teamtrees.org/\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        {' '}\n        trees\n      </StyledLink>\n      <br />\n      Image created by\n      <StyledLink\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href=\"https://www.freepik.com/free-vector/environment-concept_799751.htm#page=5&query=pollution%20earth&position=46\"\n      >\n        {' '}\n        freepik\n      </StyledLink>\n    </StyledText>\n  </StyledFooter>\n);\n\nexport default Footer;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport { ThemeProvider } from 'styled-components';\nimport GlobalStyle from './theme/GlobalStyle';\nimport theme from './theme/mainTheme';\nimport Header from './components/Header/Header';\nimport Hero from './components/Hero/Hero';\nimport Form from './components/Form/Form';\nimport getDateString from './utils/getDateString';\nimport CitiesGrid from './components/CitiesGrid/CitiesGrid';\nimport Spinner from './components/Spinner/Spinner';\nimport Footer from './components/Footer/Footer';\n\nclass App extends PureComponent {\n  state = {\n    isCountryInvalid: false,\n    isLoading: false,\n    cities: [],\n    errorMessage: '',\n  };\n\n  getPollutedCities = async (countryAbbr, citiesLimit) => {\n    const POLLUTED_CITIES_URL = `https://api.openaq.org/v1/measurements?country=${countryAbbr}&parameter=pm25&sort=desc&limit=500&order_by=value&date_from=${getDateString(\n      new Date(),\n    )}`;\n\n    const response = await axios.get(POLLUTED_CITIES_URL);\n    const { results } = response.data;\n    const citiesSet = new Set();\n\n    results.some(result => {\n      if (!citiesSet.has(result.city)) {\n        citiesSet.add(result.city);\n      }\n      return citiesSet.size === citiesLimit;\n    });\n    // remove part after backslash to be able to get data from wikipedia api\n    return [...citiesSet].map(city =>\n      city.includes('/') ? city.substring(0, city.indexOf('/')) : city,\n    );\n  };\n\n  getCitiesDescription = async cities => {\n    const CITIES_DESCRIPTION_URL = `https://en.wikipedia.org/w/api.php?action=query&prop=extracts&exintro&explaintext&redirects=1&exsentences=2&format=json&exsectionformat=plain&origin=*&titles=${cities}`;\n\n    const response = await axios.get(CITIES_DESCRIPTION_URL);\n    return response;\n  };\n\n  handleSubmit = async country => {\n    const { COUNTRY_MAP, CITIES_LIMIT } = this.props;\n    if (!COUNTRY_MAP.has(country)) {\n      this.setState({\n        isCountryInvalid: true,\n      });\n    } else {\n      this.setState({\n        isLoading: true,\n        isCountryInvalid: false,\n      });\n\n      try {\n        localStorage.setItem('country', country);\n        const countryAbbr = COUNTRY_MAP.get(country);\n        const cities = await this.getPollutedCities(countryAbbr, CITIES_LIMIT);\n\n        const citiesWikipediaQuery = encodeURI(cities.join('|'));\n        const citiesDescription = await this.getCitiesDescription(\n          citiesWikipediaQuery,\n        );\n        const citiesArray = Object.values(citiesDescription.data.query.pages);\n\n        this.setState({\n          cities: citiesArray,\n          errorMessage: '',\n          isLoading: false,\n        });\n      } catch (error) {\n        this.setState({\n          errorMessage: error.message,\n          isLoading: false,\n        });\n      }\n    }\n  };\n\n  render() {\n    const { handleSubmit } = this;\n    const { isCountryInvalid, errorMessage, cities, isLoading } = this.state;\n    return (\n      <>\n        <GlobalStyle />\n        <ThemeProvider theme={theme}>\n          <Header />\n          <main>\n            <Hero />\n            <Form\n              errorMessage={errorMessage}\n              isCountryInvalid={isCountryInvalid}\n              handleSubmit={handleSubmit}\n            />\n            {isLoading && <Spinner />}\n            {cities.length !== 0 && <CitiesGrid cities={cities} />}\n          </main>\n          <Footer />\n        </ThemeProvider>\n      </>\n    );\n  }\n}\n\nApp.defaultProps = {\n  COUNTRY_MAP: new Map([\n    ['Poland', 'PL'],\n    ['Germany', 'DE'],\n    ['Spain', 'ES'],\n    ['France', 'FR'],\n  ]),\n  CITIES_LIMIT: 10,\n};\n\nApp.propTypes = {\n  COUNTRY_MAP: PropTypes.instanceOf(Map),\n  CITIES_LIMIT: PropTypes.number,\n};\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}